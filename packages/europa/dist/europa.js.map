{"version":3,"file":"europa.js","sources":["../../europa-plugin-standard-anchor/src/index.js","../../europa-plugin-standard-block-quote/src/index.js","../../europa-plugin-standard-bold/src/index.js","../../europa-plugin-standard-code/src/index.js","../../europa-plugin-standard-description/src/index.js","../../europa-plugin-standard-details/src/index.js","../../europa-plugin-standard-frame/src/index.js","../../europa-plugin-standard-heading/src/index.js","../../europa-plugin-standard-horizontal-rule/src/index.js","../../europa-plugin-standard-image/src/index.js","../../europa-plugin-standard-italic/src/index.js","../../europa-plugin-standard-line-break/src/index.js","../../europa-plugin-standard-list/src/index.js","../../europa-plugin-standard-paragraph/src/index.js","../../europa-plugin-standard-preformatted/src/index.js","../../europa-plugin-standard-quote/src/index.js","../../europa-preset-standard/src/index.js","../../europa-utils/src/dom.js","../../europa-utils/src/index.js","../../europa-core/src/Conversion.js","../../europa-core/src/option/Option.js","../../europa-core/src/option/OptionParser.js","../../europa-helpers/src/helpers.js","../../europa-helpers/src/index.js","../../europa-core/src/plugin/PluginAPI.js","../../europa-core/src/plugin/PluginManager.js","../../europa-core/src/service/ServiceManager.js","../../europa-core/src/Europa.js","../../europa-core/src/index.js","../../europa-core/src/service/Service.js","../../europa-core/src/service/window/WindowService.js","../src/service/window/BrowserWindowService.js","../src/Europa.js"],"sourcesContent":["/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst contextKey = 'europaPluginStandardAnchor';\n\nmodule.exports = function() {\n  return {\n    converter: {\n      A: {\n        startTag(conversion, context) {\n          const { element, options } = conversion;\n          const href = options.absolute ? element.href : element.getAttribute('href');\n          if (!href) {\n            return true;\n          }\n\n          const { anchorMap, anchors } = conversion.context[contextKey];\n          const title = element.getAttribute('title');\n          const value = title ? `${href} \"${title}\"` : href;\n          let index;\n\n          if (options.inline) {\n            context.value = `(${value})`;\n          } else {\n            index = anchorMap[value];\n            if (index == null) {\n              index = anchors.push(value) - 1;\n\n              anchorMap[value] = index;\n            }\n\n            context.value = `[anchor${index}]`;\n          }\n\n          conversion.output('[');\n\n          conversion.atNoWhiteSpace = true;\n\n          return true;\n        },\n\n        endTag(conversion, context) {\n          if (context.value != null) {\n            conversion.output(`]${context.value}`);\n          }\n        }\n      }\n    },\n\n    startConversion(conversion) {\n      conversion.context[contextKey] = {\n        anchorMap: {},\n        anchors: []\n      };\n    },\n\n    endConversion(conversion) {\n      const { anchors } = conversion.context[contextKey];\n      if (!anchors.length) {\n        return;\n      }\n\n      conversion.append('\\n\\n');\n\n      for (let i = 0; i < anchors.length; i++) {\n        conversion.append(`[anchor${i}]: ${anchors[i]}\\n`);\n      }\n    }\n  };\n};\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nmodule.exports = function(api) {\n  return {\n    converter: {\n      BLOCKQUOTE: api.getHelper('blockQuote')\n    }\n  };\n};\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nmodule.exports = function(api) {\n  const boldConverter = api.getHelper('bold');\n\n  return {\n    converter: {\n      B: boldConverter,\n      STRONG: boldConverter\n    }\n  };\n};\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst codeConverter = {\n  startTag(conversion, context) {\n    context.previousInCodeBlock = conversion.inCodeBlock;\n\n    if (conversion.inPreformattedBlock) {\n      context.skipped = true;\n    } else {\n      conversion.output('`');\n\n      conversion.inCodeBlock = true;\n    }\n\n    return true;\n  },\n\n  endTag(conversion, context) {\n    if (!context.skipped) {\n      conversion.inCodeBlock = context.previousInCodeBlock;\n\n      conversion.output('`');\n    }\n  }\n};\n\nmodule.exports = function() {\n  return {\n    converter: {\n      CODE: codeConverter,\n      KBD: codeConverter,\n      SAMP: codeConverter\n    }\n  };\n};\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nmodule.exports = function(api) {\n  return {\n    converter: {\n      DD: api.getHelper('blockQuote'),\n\n      DT: {\n        startTag(conversion, context) {\n          conversion.appendParagraph();\n\n          conversion.output('**');\n\n          conversion.atNoWhiteSpace = true;\n\n          return true;\n        },\n\n        endTag(conversion, context) {\n          conversion.output('**');\n        }\n      }\n    }\n  };\n};\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nmodule.exports = function() {\n  return {\n    converter: {\n      DETAILS: {\n        startTag(conversion, context) {\n          // TODO: Improve (summary should always be visible, when available, regardless of open state)\n          // TODO: Possible just remove special handling of SUMMARY as well\n          const { element } = conversion;\n\n          conversion.appendParagraph();\n\n          if (element.hasAttribute('open')) {\n            return true;\n          }\n\n          const summary = element.querySelector('summary');\n          conversion.convertElement(summary);\n        }\n      }\n    }\n  };\n};\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst frameConverter = {\n  startTag(conversion, context) {\n    context.previousWindow = conversion.window;\n\n    const window = conversion.element.contentWindow;\n\n    if (window) {\n      conversion.window = window;\n\n      conversion.convertElement(window.document.body);\n    }\n\n    return false;\n  },\n  endTag(conversion, context) {\n    conversion.window = context.previousWindow;\n  }\n};\n\nmodule.exports = function() {\n  return {\n    converter: {\n      FRAME: frameConverter,\n      IFRAME: frameConverter\n    }\n  };\n};\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst headingConverter = {\n  startTag(conversion, context) {\n    const level = parseInt(conversion.tagName.match(/([1-6])$/)[1], 10);\n\n    conversion.appendParagraph();\n\n    let heading = '';\n    for (let i = 0; i < level; i++) {\n      heading += '#';\n    }\n\n    conversion.output(`${heading} `);\n\n    return true;\n  }\n};\n\nmodule.exports = function() {\n  return {\n    converter: {\n      H1: headingConverter,\n      H2: headingConverter,\n      H3: headingConverter,\n      H4: headingConverter,\n      H5: headingConverter,\n      H6: headingConverter\n    }\n  };\n};\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nmodule.exports = function() {\n  return {\n    converter: {\n      HR: {\n        startTag(conversion, context) {\n          conversion\n            .appendParagraph()\n            .output('---')\n            .appendParagraph();\n\n          return false;\n        }\n      }\n    }\n  };\n};\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst contextKey = 'europaPluginStandardImage';\n\nmodule.exports = function() {\n  return {\n    converter: {\n      IMG: {\n        startTag(conversion, context) {\n          const { element, options } = conversion;\n          const source = options.absolute ? element.src : element.getAttribute('src');\n          if (!source) {\n            return false;\n          }\n\n          const alternativeText = element.getAttribute('alt') || '';\n          const { imageMap, images } = conversion.context[contextKey];\n          const title = element.getAttribute('title');\n          let value = title ? `${source} \"${title}\"` : source;\n          let index;\n\n          if (options.inline) {\n            value = `(${value})`;\n          } else {\n            index = imageMap[value];\n            if (index == null) {\n              index = images.push(value) - 1;\n\n              imageMap[value] = index;\n            }\n\n            value = `[image${index}]`;\n          }\n\n          conversion.output(`![${alternativeText}]${value}`);\n\n          return false;\n        }\n      }\n    },\n\n    startConversion(conversion) {\n      conversion.context[contextKey] = {\n        imageMap: {},\n        images: []\n      };\n    },\n\n    endConversion(conversion) {\n      const { images } = conversion.context[contextKey];\n      if (!images.length) {\n        return;\n      }\n\n      conversion.append('\\n\\n');\n\n      for (let i = 0; i < images.length; i++) {\n        conversion.append(`[image${i}]: ${images[i]}\\n`);\n      }\n    }\n  };\n};\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nmodule.exports = function(api) {\n  const italicConverter = api.getHelper('italic');\n\n  return {\n    converter: {\n      CITE: italicConverter,\n      DFN: italicConverter,\n      EM: italicConverter,\n      I: italicConverter,\n      // TODO: Remove U tag\n      U: italicConverter,\n      VAR: italicConverter\n    }\n  };\n};\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nmodule.exports = function() {\n  return {\n    converter: {\n      BR: {\n        startTag(conversion, context) {\n          conversion.append(`  ${conversion.left}`);\n\n          conversion.atLeft = true;\n          conversion.atNoWhiteSpace = true;\n\n          return false;\n        }\n      }\n    }\n  };\n};\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nfunction leftPad(string, times, padding) {\n  if (string == null) {\n    string = '';\n  }\n  if (times == null) {\n    times = 0;\n  }\n\n  for (let i = 0; i < times; i++) {\n    string = ` ${string}`;\n  }\n\n  return string;\n}\n\nmodule.exports = function() {\n  return {\n    converter: {\n      LI: {\n        startTag(conversion, context) {\n          const value = conversion.inOrderedList ? `${conversion.listIndex++}. ` : '* ';\n\n          if (!conversion.atLeft) {\n            conversion.append(conversion.left.replace(/[ ]{2,4}$/, '\\n'));\n\n            conversion.atLeft = true;\n            conversion.atNoWhiteSpace = true;\n            conversion.atParagraph = true;\n          } else if (conversion.last) {\n            conversion.last = conversion.last.replace(/[ ]{2,4}$/, '\\n');\n          }\n\n          conversion.append(leftPad(value, (conversion.listDepth - 1) * 2));\n\n          return true;\n        }\n      },\n      OL: {\n        startTag(conversion, context) {\n          context.previousInOrderedList = conversion.inOrderedList;\n          context.previousListIndex = conversion.listIndex;\n\n          if (conversion.listDepth === 0) {\n            conversion.appendParagraph();\n          }\n\n          conversion.inOrderedList = true;\n          conversion.listIndex = 1;\n          conversion.listDepth++;\n\n          return true;\n        },\n\n        endTag(conversion, context) {\n          conversion.inOrderedList = context.previousInOrderedList;\n          conversion.listIndex = context.previousListIndex;\n          conversion.listDepth--;\n        }\n      },\n      UL: {\n        startTag(conversion, context) {\n          context.previousInOrderedList = conversion.inOrderedList;\n          context.previousListIndex = conversion.listIndex;\n\n          if (conversion.listDepth === 0) {\n            conversion.appendParagraph();\n          }\n\n          conversion.inOrderedList = false;\n          conversion.listIndex = 1;\n          conversion.listDepth++;\n\n          return true;\n        },\n\n        endTag(conversion, context) {\n          conversion.inOrderedList = context.previousInOrderedList;\n          conversion.listIndex = context.previousListIndex;\n          conversion.listDepth--;\n        }\n      }\n    }\n  };\n};\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst paragraphConverter = {\n  startTag(conversion, context) {\n    conversion.appendParagraph();\n\n    return true;\n  }\n};\n\nmodule.exports = function() {\n  return {\n    converter: {\n      ADDRESS: paragraphConverter,\n      ARTICLE: paragraphConverter,\n      ASIDE: paragraphConverter,\n      DIV: paragraphConverter,\n      FIELDSET: paragraphConverter,\n      FOOTER: paragraphConverter,\n      HEADER: paragraphConverter,\n      NAV: paragraphConverter,\n      P: paragraphConverter,\n      SECTION: paragraphConverter\n    }\n  };\n};\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nmodule.exports = function() {\n  return {\n    converter: {\n      PRE: {\n        startTag(conversion, context) {\n          const value = '    ';\n\n          context.previousInPreformattedBlock = conversion.inPreformattedBlock;\n          context.previousLeft = conversion.left;\n          conversion.left += value;\n\n          if (conversion.atParagraph) {\n            conversion.append(value);\n          } else {\n            conversion.appendParagraph();\n          }\n\n          return true;\n        },\n\n        endTag(conversion, context) {\n          conversion.atLeft = false;\n          conversion.atParagraph = false;\n          conversion.inPreformattedBlock = context.previousInPreformattedBlock;\n          conversion.left = context.previousLeft;\n\n          conversion.appendParagraph();\n        }\n      }\n    }\n  };\n};\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nmodule.exports = function() {\n  return {\n    converter: {\n      Q: {\n        startTag(conversion, context) {\n          conversion.output('\"');\n\n          conversion.atNoWhiteSpace = true;\n\n          return true;\n        },\n\n        endTag(conversion, context) {\n          conversion.output('\"');\n        }\n      }\n    }\n  };\n};\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst europaPluginStandardAnchor = require('europa-plugin-standard-anchor');\nconst europaPluginStandardBlockQuote = require('europa-plugin-standard-block-quote');\nconst europaPluginStandardBold = require('europa-plugin-standard-bold');\nconst europaPluginStandardCode = require('europa-plugin-standard-code');\nconst europaPluginStandardDescription = require('europa-plugin-standard-description');\nconst europaPluginStandardDetails = require('europa-plugin-standard-details');\nconst europaPluginStandardFrame = require('europa-plugin-standard-frame');\nconst europaPluginStandardHeading = require('europa-plugin-standard-heading');\nconst europaPluginStandardHorizontalRule = require('europa-plugin-standard-horizontal-rule');\nconst europaPluginStandardImage = require('europa-plugin-standard-image');\nconst europaPluginStandardItalic = require('europa-plugin-standard-italic');\nconst europaPluginStandardLineBreak = require('europa-plugin-standard-line-break');\nconst europaPluginStandardList = require('europa-plugin-standard-list');\nconst europaPluginStandardParagraph = require('europa-plugin-standard-paragraph');\nconst europaPluginStandardPreformatted = require('europa-plugin-standard-preformatted');\nconst europaPluginStandardQuote = require('europa-plugin-standard-quote');\n\nmodule.exports = {\n  plugins: [\n    europaPluginStandardAnchor,\n    europaPluginStandardBlockQuote,\n    europaPluginStandardBold,\n    europaPluginStandardCode,\n    europaPluginStandardDescription,\n    europaPluginStandardDetails,\n    europaPluginStandardFrame,\n    europaPluginStandardHeading,\n    europaPluginStandardHorizontalRule,\n    europaPluginStandardImage,\n    europaPluginStandardItalic,\n    europaPluginStandardLineBreak,\n    europaPluginStandardList,\n    europaPluginStandardParagraph,\n    europaPluginStandardPreformatted,\n    europaPluginStandardQuote\n  ]\n};\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\n/**\n * Checks whether the specified <code>element</code> is currently visible using the <code>window</code> provided.\n *\n * This is not a very sophisticated check and could easily be mistaken, but it should catch a lot of the most simple\n * cases.\n *\n * @param {Element} element - the element whose visibility is to be checked\n * @param {Window} window - the window to be used\n * @return {boolean} <code>true</code> if <code>element</code> is visible; otherwise <code>false</code>.\n * @public\n */\nfunction isVisible(element, window) {\n  const style = window.getComputedStyle(element);\n\n  return style.getPropertyValue('display') !== 'none' && style.getPropertyValue('visibility') !== 'hidden';\n}\n\nmodule.exports = {\n  isVisible\n};\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst dom = require('./dom');\n\n/**\n * Iterates over own (not inherited) enumerable properties on the specified <code>object</code>.\n *\n * Nothing happens if <code>object</code> is <code>null</code>.\n *\n * @param {?Object} object - the object whose own properties are to be iterated over\n * @param {europa-utils~ForOwnCallback} callback - the function to be called with the value and key for each own\n * property on <code>object</code>\n * @return {void}\n * @public\n */\nfunction forOwn(object, callback) {\n  if (!object) {\n    return;\n  }\n\n  for (const key in object) {\n    if (hasOwn(object, key)) {\n      callback(object[key], key, object);\n    }\n  }\n}\n\n/**\n * Returns whether the specified <code>object</code> has a property with the specified <code>name</code> as an own\n * (not inherited) property.\n *\n * @param {Object} object - the object on which the property is to be checked\n * @param {string} name - the name of the property to be checked\n * @return {boolean} <code>true</code> if <code>object</code> has an own property with <code>name</code>.\n * @public\n */\nfunction hasOwn(object, name) {\n  return Object.prototype.hasOwnProperty.call(object, name);\n}\n\n/**\n * Returns the names of all own (not inherited) enumerable properties on the specified <code>object</code>.\n *\n * An empty array is returned if <code>object</code> is <code>null</code> or contains no such properties.\n *\n * @param {?Object} object - the object whose keys are to be returned\n * @return {Array.<string>} An array containing all own keys for <code>object</code>.\n * @public\n */\nfunction ownKeys(object) {\n  const keys = [];\n\n  forOwn(object, (value, key) => {\n    keys.push(key);\n  });\n\n  return keys;\n}\n\nmodule.exports = {\n  dom,\n  forOwn,\n  hasOwn,\n  ownKeys\n};\n\n/**\n * Called for each own enumerable property on <code>object</code>.\n *\n * @callback europa-utils~ForOwnCallback\n * @param {*} value - the value of the property\n * @param {string} key - the name of the property\n * @param {Object} object - the object to which the property belongs\n * @return {void}\n */\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst utils = require('europa-utils');\n\nconst replacements = {\n  '\\\\\\\\': '\\\\\\\\',\n  '\\\\[': '\\\\[',\n  '\\\\]': '\\\\]',\n  '>': '\\\\>',\n  '_': '\\\\_',\n  '\\\\*': '\\\\*',\n  '`': '\\\\`',\n  '#': '\\\\#',\n  '([0-9])\\\\.(\\\\s|$)': '$1\\\\.$2',\n  '\\u00a9': '(c)',\n  '\\u00ae': '(r)',\n  '\\u2122': '(tm)',\n  '\\u00a0': ' ',\n  '\\u00b7': '\\\\*',\n  '\\u2002': ' ',\n  '\\u2003': ' ',\n  '\\u2009': ' ',\n  '\\u2018': '\\'',\n  '\\u2019': '\\'',\n  '\\u201c': '\"',\n  '\\u201d': '\"',\n  '\\u2026': '...',\n  '\\u2013': '--',\n  '\\u2014': '---'\n};\nconst replacementsRegExp = {};\nconst skipTagNames = [\n  'APPLET',\n  'AREA',\n  'AUDIO',\n  'BUTTON',\n  'CANVAS',\n  'DATALIST',\n  'EMBED',\n  'HEAD',\n  'INPUT',\n  'MAP',\n  'MENU',\n  'METER',\n  'NOFRAMES',\n  'NOSCRIPT',\n  'OBJECT',\n  'OPTGROUP',\n  'OPTION',\n  'PARAM',\n  'PROGRESS',\n  'RP',\n  'RT',\n  'RUBY',\n  'SCRIPT',\n  'SELECT',\n  'STYLE',\n  'TEXTAREA',\n  'TITLE',\n  'VIDEO'\n].reduce((acc, value) => {\n  acc[value] = true;\n\n  return acc;\n}, {});\n\nutils.forOwn(replacements, (value, key) => {\n  replacementsRegExp[key] = new RegExp(key, 'g');\n});\n\n/**\n * Contains contextual information for a single conversion process.\n *\n * @param {Europa} europa - the {@link Europa} instance responsible for this conversion\n * @param {Europa~Options} options - the options to be used\n * @param {PluginManager} pluginManager - the {@link PluginManager} to be used\n * @public\n */\nclass Conversion {\n\n  constructor(europa, options, pluginManager) {\n    /**\n     * The {@link Europa} instance responsible for this {@link Conversion}.\n     *\n     * @public\n     * @type {Europa}\n     */\n    this.europa = europa;\n\n    /**\n     * The options for this {@link Conversion}.\n     *\n     * @public\n     * @type {Europa~Options}\n     */\n    this.options = options;\n\n    /**\n     * Whether the buffer is at the start of the current line.\n     *\n     * @public\n     * @type {boolean}\n     */\n    this.atLeft = true;\n\n    /**\n     * Whether any white space should be removed from the start of the next output.\n     *\n     * @public\n     * @type {boolean}\n     */\n    this.atNoWhiteSpace = true;\n\n    /**\n     * Whether the buffer is at the start of a paragraph.\n     *\n     * @public\n     * @type {boolean}\n     */\n    this.atParagraph = true;\n\n    /**\n     * The conversion output buffer to which the Markdown will be written.\n     *\n     * @public\n     * @type {string}\n     */\n    this.buffer = '';\n\n    /**\n     * The context for this {@link Conversion}.\n     *\n     * @public\n     * @type {Object.<string, *>}\n     */\n    this.context = {};\n\n    /**\n     * Whether the buffer is currently within a code block.\n     *\n     * @public\n     * @type {boolean}\n     */\n    this.inCodeBlock = false;\n\n    /**\n     * Whether the buffer is currently within an ordered list.\n     *\n     * @public\n     * @type {boolean}\n     */\n    this.inOrderedList = false;\n\n    /**\n     * Whether the buffer is currently within a preformatted block.\n     *\n     * @public\n     * @type {boolean}\n     */\n    this.inPreformattedBlock = false;\n\n    /**\n     * The last string to be output next to the buffer.\n     *\n     * @public\n     * @type {string}\n     */\n    this.last = null;\n\n    /**\n     * The start of the current line.\n     *\n     * @public\n     * @type {string}\n     */\n    this.left = '\\n';\n\n    /**\n     * The depth of nested lists.\n     *\n     * @public\n     * @type {number}\n     */\n    this.listDepth = 0;\n\n    /**\n     * The one-based index for the current list item within the current list.\n     *\n     * @public\n     * @type {number}\n     */\n    this.listIndex = 1;\n\n    this._document = europa.document;\n    this._element = null;\n    this._pluginManager = pluginManager;\n    this._tagName = null;\n    this._window = europa.window;\n  }\n\n  /**\n   * Appends the last output string to the buffer and then queues the specified <code>string</code> to be output.\n   *\n   * @param {string} string - the string to be appended\n   * @return {Conversion} A reference to this {@link Conversion} for chaining purposes.\n   * @public\n   */\n  append(string) {\n    if (this.last != null) {\n      this.buffer += this.last;\n    }\n\n    this.last = string;\n\n    return this;\n  }\n\n  /**\n   * Appends a paragraph to the output buffer.\n   *\n   * @return {Conversion} A reference to this {@link Conversion} for chaining purposes.\n   * @public\n   */\n  appendParagraph() {\n    if (this.atParagraph) {\n      return this;\n    }\n\n    if (!this.atLeft) {\n      this.append(this.left);\n\n      this.atLeft = true;\n    }\n\n    this.append(this.left);\n\n    this.atNoWhiteSpace = true;\n    this.atParagraph = true;\n\n    return this;\n  }\n\n  /**\n   * Converts the specified <code>element</code> and it's children into Markdown using this {@link Conversion}.\n   *\n   * Nothing happens if <code>element</code> is <code>null</code> or is invisible (simplified detection used).\n   *\n   * @param {?Element} element - the element (along well as it's children) to be converted into Markdown\n   * @return {void}\n   * @public\n   */\n  convertElement(element) {\n    if (!element) {\n      return;\n    }\n\n    const { _pluginManager: pluginManager, window } = this;\n\n    if (element.nodeType === window.Node.ELEMENT_NODE) {\n      if (!utils.dom.isVisible(element, window)) {\n        return;\n      }\n\n      this.element = element;\n\n      const { tagName } = this;\n\n      if (skipTagNames[tagName]) {\n        return;\n      }\n\n      const context = {};\n      const convertChildren = pluginManager.hasConverter(tagName)\n        ? pluginManager.invokeConverter(tagName, 'startTag', this, context)\n        : true;\n\n      if (convertChildren) {\n        for (let i = 0; i < element.childNodes.length; i++) {\n          this.convertElement(element.childNodes[i]);\n        }\n      }\n\n      pluginManager.invokeConverter(tagName, 'endTag', this, context);\n    } else if (element.nodeType === window.Node.TEXT_NODE) {\n      const value = element.nodeValue || '';\n\n      if (this.inPreformattedBlock) {\n        this.output(value);\n      } else if (this.inCodeBlock) {\n        this.output(value.replace(/`/g, '\\\\`'));\n      } else {\n        this.output(value, true);\n      }\n    }\n  }\n\n  /**\n   * Outputs the specified <code>string</code> to the buffer.\n   *\n   * Optionally, <code>string</code> can be \"cleaned\" before being output. Doing so will replace any certain special\n   * characters as well as some white space.\n   *\n   * @param {string} string - the string to be output\n   * @param {boolean} [clean=false] - <code>true</code> to clean <code>string</code>; otherwise <code>false</code>\n   * @return {Conversion} A reference to this {@link Conversion} for chaining purposes.\n   * @public\n   */\n  output(string, clean) {\n    if (!string) {\n      return this;\n    }\n\n    string = string.replace(/\\r\\n/g, '\\n');\n\n    if (clean) {\n      string = string.replace(/\\n([ \\t]*\\n)+/g, '\\n')\n        .replace(/\\n[ \\t]+/g, '\\n')\n        .replace(/[ \\t]+/g, ' ');\n\n      utils.forOwn(replacements, (value, key) => {\n        string = string.replace(replacementsRegExp[key], value);\n      });\n    }\n\n    if (!this.inPreformattedBlock) {\n      if (this.atNoWhiteSpace) {\n        string = string.replace(/^[ \\t\\n]+/, '');\n      } else if (/^[ \\t]*\\n/.test(string)) {\n        string = string.replace(/^[ \\t\\n]+/, '\\n');\n      } else {\n        string = string.replace(/^[ \\t]+/, ' ');\n      }\n    }\n\n    if (!string) {\n      return this;\n    }\n\n    this.atLeft = /\\n$/.test(string);\n    this.atNoWhiteSpace = /[ \\t\\n]$/.test(string);\n    this.atParagraph = /\\n{2}$/.test(string);\n\n    return this.append(string.replace(/\\n/g, this.left));\n  }\n\n  /**\n   * Replaces the start of the current line with the <code>string</code> provided.\n   *\n   * @param {string} string - the string to replace the start of the current line\n   * @return {Conversion} A reference to this {@link Conversion} for chaining purposes.\n   * @public\n   */\n  replaceLeft(string) {\n    if (!this.atLeft) {\n      this.append(this.left.replace(/[ ]{2,4}$/, string));\n\n      this.atLeft = true;\n      this.atNoWhiteSpace = true;\n      this.atParagraph = true;\n    } else if (this.last) {\n      this.last = this.last.replace(/[ ]{2,4}$/, string);\n    }\n\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  toString() {\n    return this.append('').buffer.trim();\n  }\n\n  /**\n   * Returns the current document for this {@link Conversion}.\n   *\n   * This may not be the same document as is associated with the {@link Europa} instance as this document may be\n   * nested (e.g. a frame).\n   *\n   * @return {?Document} The current document.\n   * @public\n   */\n  get document() {\n    return this._document;\n  }\n\n  /**\n   * Returns the current element for this {@link Conversion}.\n   *\n   * @return {?Element} The current element.\n   * @public\n   */\n  get element() {\n    return this._element;\n  }\n\n  /**\n   * Sets the current element for this {@link Conversion} to <code>element</code>.\n   *\n   * @param {?Element} element - the current element to be set\n   * @return {void}\n   * @public\n   */\n  set element(element) {\n    this._element = element;\n    this._tagName = element && element.tagName ? element.tagName.toUpperCase() : null;\n  }\n\n  /**\n   * Returns the name of the tag for the current element for this {@link Conversion}.\n   *\n   * The tag name will always be in upper case, when available.\n   *\n   * @return {?string} The current element's tag name.\n   * @public\n   */\n  get tagName() {\n    return this._tagName;\n  }\n\n  /**\n   * Returns the current window for this {@link Conversion}.\n   *\n   * This may not be the same window as is associated with the {@link Europa} instance as this window may be nested\n   * (e.g. a frame).\n   *\n   * @return {?Window} The current window.\n   * @public\n   */\n  get window() {\n    return this._window;\n  }\n\n  /**\n   * Sets the current window for this {@link Conversion} to <code>window</code>.\n   *\n   * This may not be the same window as is associated with the {@link Europa} instance as this window may be nested\n   * (e.g. a frame).\n   *\n   * @param {?Window} window - the window to be set\n   * @return {void}\n   * @public\n   */\n  set window(window) {\n    this._window = window;\n    this._document = window ? window.document : null;\n  }\n\n}\n\nmodule.exports = Conversion;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\n/**\n * Defines an available option.\n *\n * If <code>defaultValue</code> is a function, it will be called if/when needed and the return value will be used as the\n * default value. If the default value is to be a function itself, then <code>defaultValue</code> must return that\n * function.\n *\n * @param {string} name - the name to be used\n * @param {*} [defaultValue] - the default value to be used\n * @public\n */\nclass Option {\n\n  constructor(name, defaultValue) {\n    /**\n     * The name for this {@link Option}.\n     *\n     * @public\n     * @type {string}\n     */\n    this.name = name;\n\n    this._defaultValue = defaultValue;\n  }\n\n  /**\n   * Returns the default value for this {@link Option}.\n   *\n   * @return {*} The default value.\n   * @public\n   */\n  get defaultValue() {\n    const defaultValue = this._defaultValue;\n\n    return typeof defaultValue === 'function' ? defaultValue.call(this) : defaultValue;\n  }\n\n}\n\nmodule.exports = Option;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\n/**\n * Manages multiple {@link Option} instances that are intended to be used by multiple implementations/instances.\n *\n * @param {Option[]} options - the options to be used\n * @public\n */\nclass OptionParser {\n\n  constructor(options) {\n    /**\n     * The available options for this {@link OptionParser}.\n     *\n     * @public\n     * @type {Option[]}\n     */\n    this.options = options;\n  }\n\n  /**\n   * Returns whether an option with the specified <code>name</code> is available.\n   *\n   * @param {string} name - the name of the {@link Option} whose existence is to be checked\n   * @return {boolean} <code>true</code> if an {@link Option} exists with <code>name</code>; otherwise\n   * <code>false</code>.\n   * @public\n   */\n  exists(name) {\n    return this.options.some((option) => option.name === name);\n  }\n\n  /**\n   * Parses the specified <code>options</code>, extracting only properties that match valid options and applying default\n   * values where required.\n   *\n   * @param {Object} [options] - the options to be parsed\n   * @return {Object.<string, *>} The parsed options.\n   * @public\n   */\n  parse(options) {\n    if (!options) {\n      options = {};\n    }\n\n    const result = {};\n\n    this.options.forEach((option) => {\n      const { name } = option;\n      const value = options[name] != null ? options[name] : option.defaultValue;\n\n      result[name] = value;\n    });\n\n    return result;\n  }\n\n}\n\nmodule.exports = OptionParser;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst helpers = {\n  blockQuote() {\n    return {\n      startTag(conversion, context) {\n        const value = '> ';\n\n        context.previousLeft = conversion.left;\n        conversion.left += value;\n\n        if (conversion.atParagraph) {\n          conversion.append(value);\n        } else {\n          conversion.appendParagraph();\n        }\n\n        return true;\n      },\n\n      endTag(conversion, context) {\n        conversion.atLeft = false;\n        conversion.atParagraph = false;\n        conversion.left = context.previousLeft;\n\n        conversion.appendParagraph();\n      }\n    };\n  },\n\n  bold() {\n    return {\n      startTag(conversion, context) {\n        conversion.output('**');\n\n        conversion.atNoWhiteSpace = true;\n\n        return true;\n      },\n\n      endTag(conversion, context) {\n        conversion.output('**');\n      }\n    };\n  },\n\n  italic() {\n    return {\n      startTag(conversion, context) {\n        conversion.output('_');\n\n        conversion.atNoWhiteSpace = true;\n\n        return true;\n      },\n\n      endTag(conversion, context) {\n        conversion.output('_');\n      }\n    };\n  }\n};\n\nmodule.exports = helpers;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst utils = require('europa-utils');\n\nconst helpers = require('./helpers');\n\n/**\n * Calls the helper with the specified <code>name</code> using the <code>options</code> provided.\n *\n * @param {string} name - the name of the helper to be called\n * @param {Object} [options] - the options to be used\n * @return {*} The result of calling the helper.\n * @throws {ReferenceError} If no helper was found for <code>name</code>.\n * @public\n */\nfunction get(name, options) {\n  const fn = helpers[name];\n  if (!fn) {\n    throw new ReferenceError(`Unknown helper: ${name}`);\n  }\n\n  return fn(options);\n}\n\n/**\n * Returns all of the available helper names.\n *\n * @return {Array.<string>} The helper names.\n * @public\n */\nfunction list() {\n  return utils.ownKeys(helpers);\n}\n\nmodule.exports = {\n  get,\n  list\n};\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst helpers = require('europa-helpers');\n\n/**\n * Contains API methods that passed to plugin providers upon initialization.\n *\n * @public\n */\nclass PluginAPI {\n\n  /**\n * Calls the helper with the specified <code>name</code> using the <code>options</code> provided.\n *\n * @param {string} name - the name of the helper to be called\n * @param {Object} [options] - the options to be used\n * @return {*} The result of calling the helper.\n * @throws {ReferenceError} If no helper was found for <code>name</code>.\n * @public\n */\n  getHelper(name, options) {\n    return helpers.get(name, options);\n  }\n\n}\n\nmodule.exports = PluginAPI;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst utils = require('europa-utils');\n\nconst PluginAPI = require('./PluginAPI');\n\n/**\n * A basic manager for plugins and presets (collections of plugins) that can be hooked into {@link Europa}.\n *\n * @public\n */\nclass PluginManager {\n\n  constructor() {\n    this._api = new PluginAPI();\n    this._converters = {};\n    this._plugins = [];\n  }\n\n  /**\n   * Invokes the specified plugin <code>provider</code> with a {@link PluginAPI} instance and adds the resulting plugin\n   * to this {@link PluginManager}.\n   *\n   * If the plugin contains any converters, they will associated with their corresponding tag names, overriding any\n   * previously converters associated with those tag names.\n   *\n   * @param {PluginManager~PluginProvider} provider - the provider for the plugin to be added\n   * @return {PluginManager} A reference to this {@link PluginManager} for chaining purposes.\n   * @throws {Error} If a problem occurs while invoking <code>provider</code>.\n   * @public\n   */\n  addPlugin(provider) {\n    const plugin = provider(this._api);\n\n    utils.forOwn(plugin.converter, (converter, tagName) => {\n      if (converter) {\n        this._converters[tagName] = converter;\n      }\n    });\n\n    this._plugins.push(plugin);\n\n    return this;\n  }\n\n  /**\n   * Adds the specified <code>preset</code> to this {@link PluginManager}.\n   *\n   * This method is effectively just a shortcut for calling {@link PluginManager#addPlugin} for multiple plugin\n   * providers, however, the main benefit is that it supports the concept of presets, which are a useful mechanism for\n   * bundling and distributing plugins.\n   *\n   * @param {PluginManager~Preset} preset - the preset whose plugins are to be added\n   * @return {PluginManager} A reference to this {@link PluginManager} for chaining purposes.\n   * @public\n   */\n  addPreset(preset) {\n    const providers = preset.plugins || [];\n\n    providers.forEach((provider) => {\n      this.addPlugin(provider);\n    });\n\n    return this;\n  }\n\n  /**\n   * Returns whether this {@link PluginManager} contains a converter for the specified <code>tagName</code>.\n   *\n   * @param {string} tagName - the name of the tag to be checked\n   * @return {boolean} <code>true</code> if it has a converter for <code>tagName</code>; otherwise <code>false</code>.\n   * @public\n   */\n  hasConverter(tagName) {\n    return utils.hasOwn(this._converters, tagName);\n  }\n\n  /**\n   * Invokes the method with the specified name on with the <code>args</code> provided on the converter for the given\n   * <code>tagName</code> within this {@link PluginManager}.\n   *\n   * This method will return <code>null</code> if there is no converter for <code>tagName</code> or that converter does\n   * not have the method. Otherwise, it will return the result of invoking the method.\n   *\n   * @param {string} tagName - the name of the tag whose converter (if any) the method is to be invoked on\n   * @param {string} methodName - the name of the method to be invoked\n   * @param {...*} [args] - any arguments to be passed to the method\n   * @return {*} The result of calling the method or <code>null</code> if there is no converter for <code>tagName</code>\n   * or it did not have the method.\n   * @public\n   */\n  invokeConverter(tagName, methodName, ...args) {\n    const converter = this._converters[tagName];\n    if (!(converter && typeof converter[methodName] === 'function')) {\n      return null;\n    }\n\n    return converter[methodName](...args);\n  }\n\n  /**\n   * Invokes the method with the specified name with the <code>args</code> provided on each of the plugins within this\n   * {@link PluginManager}.\n   *\n   * Plugins that do not have the method are skipped and any return values are ignored by this method.\n   *\n   * @param {string} methodName - the name of the method to be invoked\n   * @param {...*} [args] - any arguments to be passed to the method\n   * @return {void}\n   * @public\n   */\n  invokePlugins(methodName, ...args) {\n    this._plugins.forEach((plugin) => {\n      if (typeof plugin[methodName] === 'function') {\n        plugin[methodName](...args);\n      }\n    });\n  }\n\n}\n\nmodule.exports = PluginManager;\n\n/**\n * Responsible for converting an individual HTML element to Markdown as defined in a plugin.\n *\n * @public\n * @typedef {Object} PluginManager~Converter\n */\n\n/**\n * Called at the end of the current element within the specified <code>conversion</code> and only once all children\n * elements have been converted as well, provided they weren't skipped.\n *\n * <code>context</code> can be used to receive any state that may been passed at the start of the single element\n * conversion by this converter.\n *\n * This method is optional.\n *\n * @param {Conversion} conversion - the current {@link Conversion}\n * @param {Object.<string, *>} context - the current context for this converter\n * @return {void}\n * @public\n * @abstract\n * @memberof PluginManager~Converter\n * @method endTag\n */\n\n/**\n * Called at the start of the current element within the specified <code>conversion</code> which can be used to provide\n * control over the conversion and returns whether the children of the element should be converted.\n *\n * <code>context</code> can be used to pass any state for a single element conversion from start to end, limited to this\n * converter.\n *\n * This method is optional.\n *\n * @param {Conversion} conversion - the current {@link Conversion}\n * @param {Object.<string, *>} context - the current context for this converter\n * @return {?boolean} <code>true</code> if the children of the current element should be converted; otherwise\n * <code>false</code> or <code>null</code>.\n * @public\n * @abstract\n * @memberof PluginManager~Converter\n * @method startTag\n */\n\n/**\n * A plugin that hooks into the {@link Europa} conversion process.\n *\n * Any declared converters will override any previously associated tag name to converter mappings when the plugin is\n * added to {@link Europa}.\n *\n * @public\n * @typedef {Object} PluginManager~Plugin\n * @property {Object.<string, PluginManager~Converter>} [converter] - A map containing tag name to converter pairs.\n */\n\n/**\n * Called after all elements have been converted for a single input, allowing this plugin to perform any necessary clean\n * up or tear down steps.\n *\n * This method is optional.\n *\n * @param {Conversion} conversion - the current {@link Conversion}\n * @return {void}\n * @public\n * @abstract\n * @memberof PluginManager~Plugin\n * @method endConversion\n */\n\n/**\n * Called before any elements are converted for a single input, allowing this plugin to perform any necessary setup\n * steps.\n *\n * This method is optional.\n *\n * @param {Conversion} conversion - the current {@link Conversion}\n * @return {void}\n * @public\n * @abstract\n * @memberof PluginManager~Plugin\n * @method startConversion\n */\n\n/**\n * A function which returns a plugin compatible with {@link Europa}.\n *\n * The function is invoked internally by {@link PluginManager#addPlugin} in order to get the plugin and is passed an\n * <code>api</code>, which it can choose to use or not.\n *\n * Any error thrown by the function will bubble up and prevent the plugin from being added.\n *\n * @public\n * @callback PluginManager~PluginProvider\n * @param {PluginAPI} api - a {@link PluginAPI} that provides useful methods for plugin providers\n * @return {PluginManager~Plugin} The provided plugin.\n * @throws {Error} If a problem occurs while providing the plugin.\n */\n\n/**\n * A collection of plugins that hook into the {@link Europa} conversion process.\n *\n * @public\n * @typedef {Object} PluginManager~Preset\n * @property {Array.<PluginManager~PluginProvider>} [plugins] - The plugins that belong to this preset.\n */\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\n/**\n * A basic manager for {@link Service} implementations that are mapped to simple names.\n *\n * @public\n */\nclass ServiceManager {\n\n  constructor() {\n    this._services = {};\n  }\n\n  /**\n   * Returns the {@link Service} being managed with the specified <code>name</code>.\n   *\n   * @param {string} name - the name of the {@link Service} to be returned\n   * @return {Service} The {@link Service} is being managed with <code>name</code>.\n   * @throws {Error} If no {@link Service} is being managed with <code>name</code>.\n   * @public\n   */\n  getService(name) {\n    const service = this._services[name];\n    if (!service) {\n      throw new Error(`Service is not being managed with name: ${name}`);\n    }\n\n    return service;\n  }\n\n  /**\n   * Sets the {@link Service} implementation to be managed for the specified <code>name</code> to the\n   * <code>service</code> provided.\n   *\n   * @param {string} name - the name of the {@link Service} to be managed with <code>name</code>\n   * @param {Service} service - the {@link Service} implementation to be managed\n   * @return {void}\n   * @throws {Error} If a {@link Service} is already being managed with the same <code>name</code>.\n   * @public\n   */\n  setService(name, service) {\n    if (this._services[name]) {\n      throw new Error(`Service is already managed with name: ${name}`);\n    }\n\n    if (service) {\n      this._services[name] = service;\n    }\n  }\n\n}\n\nmodule.exports = ServiceManager;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Conversion = require('./Conversion');\nconst Option = require('./option/Option');\nconst OptionParser = require('./option/OptionParser');\nconst PluginManager = require('./plugin/PluginManager');\nconst ServiceManager = require('./service/ServiceManager');\n\nconst pluginManager = new PluginManager();\nconst serviceManager = new ServiceManager();\n\n/**\n * Enables configuration of a HTML to Markdown converter that supports HTML strings and DOM elements.\n *\n * @param {Europa~Options} [options] - the options to be used\n * @public\n */\nclass Europa {\n\n  /**\n   * Invokes the specified plugin <code>provider</code> with a {@link PluginAPI} instance and registers the resulting\n   * plugin.\n   *\n   * If the plugin contains any converters, they will associated with their corresponding tag names, overriding any\n   * previously converters associated with those tag names.\n   *\n   * @param {PluginManager~PluginProvider} provider - the provider for the plugin to be registered\n   * @return {void}\n   * @throws {Error} If a problem occurs while invoking <code>provider</code>.\n   * @public\n   */\n  static registerPlugin(provider) {\n    pluginManager.addPlugin(provider);\n  }\n\n  /**\n   * Registers the specified <code>preset</code>.\n   *\n   * This method is effectively just a shortcut for calling {@link Europa.registerPlugin} for multiple plugin providers,\n   * however, the main benefit is that it supports the concept of presets, which are a useful mechanism for bundling and\n   * distributing plugins.\n   *\n   * @param {PluginManager~Preset} preset - the preset whose plugins are to be registered\n   * @return {void}\n   * @public\n   */\n  static registerPreset(preset) {\n    pluginManager.addPreset(preset);\n  }\n\n  /**\n   * Configures the <code>service</code> provided to be used by all {@link Europa} instances.\n   *\n   * @param {Service} service - the {@link Service} to be configured\n   * @return {void}\n   * @throws {Error} If a {@link Service} has already been configured with the same name.\n   * @public\n   */\n  static use(service) {\n    serviceManager.setService(service.getName(), service);\n  }\n\n  constructor(options) {\n    this._options = new OptionParser([\n      new Option('absolute', false),\n      new Option('baseUri', () => serviceManager.getService('window').getDefaultBaseUri()),\n      new Option('inline', false)\n    ]).parse(options);\n    this._window = null;\n  }\n\n  /**\n   * Converts the specified <code>html</code> into Markdown based on the options configured for this {@link Europa}\n   * instance.\n   *\n   * <code>html</code> can either be an HTML string or a DOM element whose HTML contents are to be converted into\n   * Markdown.\n   *\n   * @param {?Element|?string} html - the HTML (or element whose inner HTML is) to be converted into Markdown\n   * @return {string} The Markdown converted from <code>html</code>.\n   * @public\n   */\n  convert(html) {\n    if (!html) {\n      return '';\n    }\n\n    const { document } = this;\n    let root;\n\n    if (typeof html === 'string') {\n      root = document.createElement('div');\n      root.innerHTML = html;\n    } else {\n      root = html;\n    }\n\n    const conversion = new Conversion(this, this._options, pluginManager);\n    let wrapper;\n\n    if (!document.contains(root)) {\n      wrapper = document.createElement('div');\n      wrapper.style.display = 'none';\n      wrapper.appendChild(root);\n\n      document.body.appendChild(wrapper);\n    }\n\n    try {\n      pluginManager.invokePlugins('startConversion', conversion);\n\n      conversion.convertElement(root);\n\n      pluginManager.invokePlugins('endConversion', conversion);\n    } finally {\n      if (wrapper) {\n        document.body.removeChild(wrapper);\n\n        wrapper.removeChild(root);\n      }\n    }\n\n    return conversion.toString();\n  }\n\n  /**\n   * Releases the window used by this {@link Europa} instance.\n   *\n   * This allows closeable {@link WindowService} implementations to close the window and free up resources. However,\n   * this instance can and will simply retrieve another window from the {@link WindowService} the next time it is\n   * required (i.e. {@link Europa#convert} is called).\n   *\n   * @return {Europa} A reference to this {@link Europa} for chaining purposes.\n   * @public\n   */\n  release() {\n    if (this._window) {\n      serviceManager.getService('window').closeWindow(this._window);\n\n      this._window = null;\n    }\n\n    return this;\n  }\n\n  /**\n   * Returns the document to be used for HTML to Markdown conversion by this {@link Europa} instance.\n   *\n   * @return {Document} The document.\n   * @public\n   */\n  get document() {\n    return this.window.document;\n  }\n\n  /**\n   * Returns the window to be used for HTML to Markdown conversion by this {@link Europa} instance.\n   *\n   * @return {Window} The window.\n   * @public\n   */\n  get window() {\n    if (!this._window) {\n      this._window = serviceManager.getService('window').getWindow(this._options.baseUri);\n    }\n\n    return this._window;\n  }\n\n}\n\nmodule.exports = Europa;\n\n/**\n * The options used by {@link Europa}.\n *\n * @typedef {Object} Europa~Options\n * @property {boolean} [absolute=false] - Whether absolute URLS should be used for anchors/images.\n * @property {string} [baseUri] - The base URI for the window. This is ignored in environments where the base URI cannot\n * be changed.\n * @property {boolean} [inline=false] - Whether anchor/image URLs are to be inserted inline.\n */\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst europaPresetStandard = require('europa-preset-standard');\n\nconst Europa = require('./Europa');\n\nEuropa.registerPreset(europaPresetStandard);\n\nmodule.exports = Europa;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\n/**\n * Defines a service contract that must be met by all implementations.\n *\n * @public\n */\nclass Service {\n\n  /**\n   * Returns the name of this {@link Service}.\n   *\n   * @return {string} The service name.\n   * @public\n   * @abstract\n   */\n  getName() {}\n\n}\n\nmodule.exports = Service;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Service = require('../Service');\n\n/**\n * A service used to retrieve the window object for converting HTML to Markdown and, optionally, to close it upon\n * destruction of the {@link Europa} instance. This can be useful to free up resources as/when required in an artificial\n * browser environment.\n *\n * @public\n */\nclass WindowService extends Service {\n\n  /**\n   * Closes the specified <code>window</code> but only if this {@link WindowService} is closeable.\n   *\n   * @param {Window} window - the window to be closed\n   * @return {void}\n   * @public\n   */\n  closeWindow(window) {\n    if (this.isCloseable(window)) {\n      window.close();\n    }\n  }\n\n  /**\n   * Returns the default base URI for windows provided by this {@link WindowService}.\n   *\n   * Implementations of {@link WindowService} <b>must</b> override this method with their own specific logic.\n   *\n   * @return {string} The default base URI.\n   * @public\n   * @abstract\n   */\n  getDefaultBaseUri() {}\n\n  /**\n   * @override\n   */\n  getName() {\n    return 'window';\n  }\n\n  /**\n   * Returns a window to be used for converting HTML to Markdown using the base URI provided.\n   *\n   * It's important to note that the base URI cannot be changed in some environments, in which case <code>baseUri</code>\n   * will be ignored.\n   *\n   * Implementations of {@link WindowService} <b>must</b> override this method with their own specific logic.\n   *\n   * @param {string} baseUri - the base URI to be used\n   * @return {Window} The window.\n   * @public\n   * @abstract\n   */\n  getWindow(baseUri) {}\n\n  /**\n   * Returns whether the specified <code>window</code> which was retrieved by this {@link WindowService} is closeable.\n   *\n   * The default implementation of this method will always return <code>false</code>.\n   *\n   * @param {Window} window - the window to be checked\n   * @return {boolean} <code>true</code> if <code>window</code> is closeable; otherwise <code>false</code>.\n   * @public\n   */\n  isCloseable(window) {\n    return false;\n  }\n\n}\n\nmodule.exports = WindowService;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst WindowService = require('europa-core/src/service/window/WindowService');\n\n/**\n * An implementation of {@link WindowService} intended for use within a browser environment.\n *\n * @public\n */\nclass BrowserWindowService extends WindowService {\n\n  /**\n   * @override\n   */\n  getDefaultBaseUri() {\n    return window.document.baseURI;\n  }\n\n  /**\n   * @override\n   */\n  getWindow(baseUri) {\n    return window;\n  }\n\n}\n\nmodule.exports = BrowserWindowService;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Europa = require('europa-core');\n\nconst BrowserWindowService = require('./service/window/BrowserWindowService');\n\nEuropa.use(new BrowserWindowService());\n\nmodule.exports = Europa;\n"],"names":["contextKey","conversion","context","element","options","href","absolute","getAttribute","anchorMap","anchors","title","value","index","inline","push","output","atNoWhiteSpace","length","append","i","api","getHelper","boldConverter","codeConverter","previousInCodeBlock","inCodeBlock","inPreformattedBlock","skipped","appendParagraph","hasAttribute","summary","querySelector","convertElement","frameConverter","previousWindow","window","contentWindow","document","body","headingConverter","level","parseInt","tagName","match","heading","source","src","alternativeText","imageMap","images","italicConverter","left","atLeft","leftPad","string","times","padding","inOrderedList","listIndex","replace","atParagraph","last","listDepth","previousInOrderedList","previousListIndex","paragraphConverter","previousInPreformattedBlock","previousLeft","europaPluginStandardAnchor","europaPluginStandardBlockQuote","europaPluginStandardBold","europaPluginStandardCode","europaPluginStandardDescription","europaPluginStandardDetails","europaPluginStandardFrame","europaPluginStandardHeading","europaPluginStandardHorizontalRule","europaPluginStandardImage","europaPluginStandardItalic","europaPluginStandardLineBreak","europaPluginStandardList","europaPluginStandardParagraph","europaPluginStandardPreformatted","europaPluginStandardQuote","isVisible","style","getComputedStyle","getPropertyValue","forOwn","object","callback","key","hasOwn","name","Object","prototype","hasOwnProperty","call","ownKeys","keys","replacements","replacementsRegExp","skipTagNames","reduce","acc","utils","RegExp","Conversion","europa","pluginManager","buffer","_document","_element","_pluginManager","_tagName","_window","nodeType","Node","ELEMENT_NODE","dom","convertChildren","hasConverter","invokeConverter","childNodes","TEXT_NODE","nodeValue","clean","test","trim","toUpperCase","Option","defaultValue","_defaultValue","OptionParser","some","option","result","forEach","helpers","get","fn","ReferenceError","list","PluginAPI","PluginManager","_api","_converters","_plugins","provider","plugin","converter","preset","providers","plugins","addPlugin","methodName","args","ServiceManager","_services","service","Error","serviceManager","Europa","addPreset","setService","getName","_options","getService","getDefaultBaseUri","parse","html","root","createElement","innerHTML","wrapper","contains","display","appendChild","invokePlugins","removeChild","toString","closeWindow","getWindow","baseUri","registerPreset","europaPresetStandard","Service","WindowService","isCloseable","close","BrowserWindowService","baseURI","use"],"mappings":"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"}