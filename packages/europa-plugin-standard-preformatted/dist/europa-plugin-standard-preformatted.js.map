{"version":3,"file":"europa-plugin-standard-preformatted.js.map","sources":["../src/index.js"],"sourcesContent":["/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nmodule.exports = function() {\n  return {\n    converter: {\n      PRE: {\n        startTag(conversion, context) {\n          const value = '    ';\n\n          context.previousInPreformattedBlock = conversion.inPreformattedBlock;\n          context.previousLeft = conversion.left;\n          conversion.left += value;\n\n          if (conversion.atParagraph) {\n            conversion.append(value);\n          } else {\n            conversion.appendParagraph();\n          }\n\n          return true;\n        },\n\n        endTag(conversion, context) {\n          conversion.atLeft = false;\n          conversion.atParagraph = false;\n          conversion.inPreformattedBlock = context.previousInPreformattedBlock;\n          conversion.left = context.previousLeft;\n\n          conversion.appendParagraph();\n        }\n      }\n    }\n  };\n};\n"],"names":["conversion","context","value","previousInPreformattedBlock","inPreformattedBlock","previousLeft","left","atParagraph","append","appendParagraph","atLeft"],"mappings":";;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAwBA,UAAiB,YAAA,GAAW;SACnB;eACM;WACJ;gBAAA,oBACMA,UADN,EACkBC,OADlB,EAC2B;cACtBC,QAAQ,MAAd;;kBAEQC,2BAAR,GAAsCH,WAAWI,mBAAjD;kBACQC,YAAR,GAAuBL,WAAWM,IAAlC;qBACWA,IAAX,IAAmBJ,KAAnB;;cAEIF,WAAWO,WAAf,EAA4B;uBACfC,MAAX,CAAkBN,KAAlB;WADF,MAEO;uBACMO,eAAX;;;iBAGK,IAAP;SAdC;cAAA,kBAiBIT,UAjBJ,EAiBgBC,OAjBhB,EAiByB;qBACfS,MAAX,GAAoB,KAApB;qBACWH,WAAX,GAAyB,KAAzB;qBACWH,mBAAX,GAAiCH,QAAQE,2BAAzC;qBACWG,IAAX,GAAkBL,QAAQI,YAA1B;;qBAEWI,eAAX;;;;GAzBR;CADF;;;;;;;;"}