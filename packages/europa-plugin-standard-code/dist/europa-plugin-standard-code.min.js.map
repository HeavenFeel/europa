{"version":3,"file":"europa-plugin-standard-code.min.js.map","sources":["../src/index.js"],"sourcesContent":["/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst codeConverter = {\n  startTag(conversion, context) {\n    context.previousInCodeBlock = conversion.inCodeBlock;\n\n    if (conversion.inPreformattedBlock) {\n      context.skipped = true;\n    } else {\n      conversion.output('`');\n\n      conversion.inCodeBlock = true;\n    }\n\n    return true;\n  },\n\n  endTag(conversion, context) {\n    if (!context.skipped) {\n      conversion.inCodeBlock = context.previousInCodeBlock;\n\n      conversion.output('`');\n    }\n  }\n};\n\nmodule.exports = function() {\n  return {\n    converter: {\n      CODE: codeConverter,\n      KBD: codeConverter,\n      SAMP: codeConverter\n    }\n  };\n};\n"],"names":["codeConverter","conversion","context","previousInCodeBlock","inCodeBlock","inPreformattedBlock","skipped","output"],"mappings":";oMAwBA,IAAMA,qBACKC,EAAYC,YACXC,oBAAsBF,EAAWG,YAErCH,EAAWI,sBACLC,SAAU,KAEPC,OAAO,OAEPH,aAAc,IAGpB,mBAGFH,EAAYC,GACZA,EAAQI,YACAF,YAAcF,EAAQC,sBAEtBI,OAAO,eAKP,kCAGLP,MACDA,OACCA"}