{"version":3,"file":"europa-plugin-standard-list.js.map","sources":["../src/index.js"],"sourcesContent":["/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nfunction leftPad(string, times, padding) {\n  if (string == null) {\n    string = '';\n  }\n  if (times == null) {\n    times = 0;\n  }\n\n  for (let i = 0; i < times; i++) {\n    string = ` ${string}`;\n  }\n\n  return string;\n}\n\nmodule.exports = function() {\n  return {\n    converter: {\n      LI: {\n        startTag(conversion, context) {\n          const value = conversion.inOrderedList ? `${conversion.listIndex++}. ` : '* ';\n\n          if (!conversion.atLeft) {\n            conversion.append(conversion.left.replace(/[ ]{2,4}$/, '\\n'));\n\n            conversion.atLeft = true;\n            conversion.atNoWhiteSpace = true;\n            conversion.atParagraph = true;\n          } else if (conversion.last) {\n            conversion.last = conversion.last.replace(/[ ]{2,4}$/, '\\n');\n          }\n\n          conversion.append(leftPad(value, (conversion.listDepth - 1) * 2));\n\n          return true;\n        }\n      },\n      OL: {\n        startTag(conversion, context) {\n          context.previousInOrderedList = conversion.inOrderedList;\n          context.previousListIndex = conversion.listIndex;\n\n          if (conversion.listDepth === 0) {\n            conversion.appendParagraph();\n          }\n\n          conversion.inOrderedList = true;\n          conversion.listIndex = 1;\n          conversion.listDepth++;\n\n          return true;\n        },\n\n        endTag(conversion, context) {\n          conversion.inOrderedList = context.previousInOrderedList;\n          conversion.listIndex = context.previousListIndex;\n          conversion.listDepth--;\n        }\n      },\n      UL: {\n        startTag(conversion, context) {\n          context.previousInOrderedList = conversion.inOrderedList;\n          context.previousListIndex = conversion.listIndex;\n\n          if (conversion.listDepth === 0) {\n            conversion.appendParagraph();\n          }\n\n          conversion.inOrderedList = false;\n          conversion.listIndex = 1;\n          conversion.listDepth++;\n\n          return true;\n        },\n\n        endTag(conversion, context) {\n          conversion.inOrderedList = context.previousInOrderedList;\n          conversion.listIndex = context.previousListIndex;\n          conversion.listDepth--;\n        }\n      }\n    }\n  };\n};\n"],"names":["leftPad","string","times","padding","i","conversion","context","value","inOrderedList","listIndex","atLeft","append","left","replace","atNoWhiteSpace","atParagraph","last","listDepth","previousInOrderedList","previousListIndex","appendParagraph"],"mappings":";;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAASA,OAAT,CAAiBC,MAAjB,EAAyBC,KAAzB,EAAgCC,OAAhC,EAAyC;MACnCF,UAAU,IAAd,EAAoB;aACT,EAAT;;MAEEC,SAAS,IAAb,EAAmB;YACT,CAAR;;;OAGG,IAAIE,IAAI,CAAb,EAAgBA,IAAIF,KAApB,EAA2BE,GAA3B,EAAgC;mBACjBH,MAAb;;;SAGKA,MAAP;;;AAGF,UAAiB,YAAA,GAAW;SACnB;eACM;UACL;gBAAA,oBACOI,UADP,EACmBC,OADnB,EAC4B;cACtBC,QAAQF,WAAWG,aAAX,GAA8BH,WAAWI,SAAX,EAA9B,UAA2D,IAAzE;;cAEI,CAACJ,WAAWK,MAAhB,EAAwB;uBACXC,MAAX,CAAkBN,WAAWO,IAAX,CAAgBC,OAAhB,CAAwB,WAAxB,EAAqC,IAArC,CAAlB;;uBAEWH,MAAX,GAAoB,IAApB;uBACWI,cAAX,GAA4B,IAA5B;uBACWC,WAAX,GAAyB,IAAzB;WALF,MAMO,IAAIV,WAAWW,IAAf,EAAqB;uBACfA,IAAX,GAAkBX,WAAWW,IAAX,CAAgBH,OAAhB,CAAwB,WAAxB,EAAqC,IAArC,CAAlB;;;qBAGSF,MAAX,CAAkBX,QAAQO,KAAR,EAAe,CAACF,WAAWY,SAAX,GAAuB,CAAxB,IAA6B,CAA5C,CAAlB;;iBAEO,IAAP;;OAjBK;UAoBL;gBAAA,oBACOZ,UADP,EACmBC,OADnB,EAC4B;kBACpBY,qBAAR,GAAgCb,WAAWG,aAA3C;kBACQW,iBAAR,GAA4Bd,WAAWI,SAAvC;;cAEIJ,WAAWY,SAAX,KAAyB,CAA7B,EAAgC;uBACnBG,eAAX;;;qBAGSZ,aAAX,GAA2B,IAA3B;qBACWC,SAAX,GAAuB,CAAvB;qBACWQ,SAAX;;iBAEO,IAAP;SAbA;cAAA,kBAgBKZ,UAhBL,EAgBiBC,OAhBjB,EAgB0B;qBACfE,aAAX,GAA2BF,QAAQY,qBAAnC;qBACWT,SAAX,GAAuBH,QAAQa,iBAA/B;qBACWF,SAAX;;OAvCK;UA0CL;gBAAA,oBACOZ,UADP,EACmBC,OADnB,EAC4B;kBACpBY,qBAAR,GAAgCb,WAAWG,aAA3C;kBACQW,iBAAR,GAA4Bd,WAAWI,SAAvC;;cAEIJ,WAAWY,SAAX,KAAyB,CAA7B,EAAgC;uBACnBG,eAAX;;;qBAGSZ,aAAX,GAA2B,KAA3B;qBACWC,SAAX,GAAuB,CAAvB;qBACWQ,SAAX;;iBAEO,IAAP;SAbA;cAAA,kBAgBKZ,UAhBL,EAgBiBC,OAhBjB,EAgB0B;qBACfE,aAAX,GAA2BF,QAAQY,qBAAnC;qBACWT,SAAX,GAAuBH,QAAQa,iBAA/B;qBACWF,SAAX;;;;GA9DR;CADF;;;;;;;;"}