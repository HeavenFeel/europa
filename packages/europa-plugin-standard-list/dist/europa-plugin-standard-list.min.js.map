{"version":3,"file":"europa-plugin-standard-list.min.js.map","sources":["../src/index.js"],"sourcesContent":["/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nfunction leftPad(string, times, padding) {\n  if (string == null) {\n    string = '';\n  }\n  if (times == null) {\n    times = 0;\n  }\n\n  for (let i = 0; i < times; i++) {\n    string = ` ${string}`;\n  }\n\n  return string;\n}\n\nmodule.exports = function() {\n  return {\n    converter: {\n      LI: {\n        startTag(conversion, context) {\n          const value = conversion.inOrderedList ? `${conversion.listIndex++}. ` : '* ';\n\n          if (!conversion.atLeft) {\n            conversion.append(conversion.left.replace(/[ ]{2,4}$/, '\\n'));\n\n            conversion.atLeft = true;\n            conversion.atNoWhiteSpace = true;\n            conversion.atParagraph = true;\n          } else if (conversion.last) {\n            conversion.last = conversion.last.replace(/[ ]{2,4}$/, '\\n');\n          }\n\n          conversion.append(leftPad(value, (conversion.listDepth - 1) * 2));\n\n          return true;\n        }\n      },\n      OL: {\n        startTag(conversion, context) {\n          context.previousInOrderedList = conversion.inOrderedList;\n          context.previousListIndex = conversion.listIndex;\n\n          if (conversion.listDepth === 0) {\n            conversion.appendParagraph();\n          }\n\n          conversion.inOrderedList = true;\n          conversion.listIndex = 1;\n          conversion.listDepth++;\n\n          return true;\n        },\n\n        endTag(conversion, context) {\n          conversion.inOrderedList = context.previousInOrderedList;\n          conversion.listIndex = context.previousListIndex;\n          conversion.listDepth--;\n        }\n      },\n      UL: {\n        startTag(conversion, context) {\n          context.previousInOrderedList = conversion.inOrderedList;\n          context.previousListIndex = conversion.listIndex;\n\n          if (conversion.listDepth === 0) {\n            conversion.appendParagraph();\n          }\n\n          conversion.inOrderedList = false;\n          conversion.listIndex = 1;\n          conversion.listDepth++;\n\n          return true;\n        },\n\n        endTag(conversion, context) {\n          conversion.inOrderedList = context.previousInOrderedList;\n          conversion.listIndex = context.previousListIndex;\n          conversion.listDepth--;\n        }\n      }\n    }\n  };\n};\n"],"names":["conversion","context","value","inOrderedList","listIndex","atLeft","last","replace","append","left","atNoWhiteSpace","atParagraph","string","times","padding","i","leftPad","listDepth","previousInOrderedList","previousListIndex","appendParagraph"],"mappings":";2MAuCiB,mDAIAA,EAAYC,OACbC,EAAQF,EAAWG,cAAmBH,EAAWI,iBAAkB,YAEpEJ,EAAWK,OAMLL,EAAWM,SACTA,KAAON,EAAWM,KAAKC,QAAQ,YAAa,UAN5CC,OAAOR,EAAWS,KAAKF,QAAQ,YAAa,SAE5CF,QAAS,IACTK,gBAAiB,IACjBC,aAAc,KAKhBH,OAhCrB,SAAiBI,EAAQC,EAAOC,GAChB,MAAVF,MACO,IAEE,MAATC,MACM,OAGL,IAAIE,EAAI,EAAGA,EAAIF,EAAOE,UACZH,SAGRA,EAoBmBI,CAAQd,EAAoC,GAA5BF,EAAWiB,UAAY,MAElD,0BAIAjB,EAAYC,YACXiB,sBAAwBlB,EAAWG,gBACnCgB,kBAAoBnB,EAAWI,UAEV,IAAzBJ,EAAWiB,aACFG,oBAGFjB,eAAgB,IAChBC,UAAY,IACZa,aAEJ,mBAGFjB,EAAYC,KACNE,cAAgBF,EAAQiB,wBACxBd,UAAYH,EAAQkB,oBACpBF,oCAIJjB,EAAYC,YACXiB,sBAAwBlB,EAAWG,gBACnCgB,kBAAoBnB,EAAWI,UAEV,IAAzBJ,EAAWiB,aACFG,oBAGFjB,eAAgB,IAChBC,UAAY,IACZa,aAEJ,mBAGFjB,EAAYC,KACNE,cAAgBF,EAAQiB,wBACxBd,UAAYH,EAAQkB,oBACpBF"}